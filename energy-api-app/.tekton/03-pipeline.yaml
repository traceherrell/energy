apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: dotnet-gitops-pipeline
  namespace: energy-api-app
spec:
  description: >-
    This pipeline builds a .NET application, pushes the image to Quay.io,
    and then updates the deployment repository with the new image digest.
  params:
    - name: source-repo-url
      type: string
      description: The URL of the .NET application's source code git repository.
    - name: deployment-repo-url
      type: string
      description: The URL of the Argo CD deployment git repository.
    - name: image-url
      type: string
      description: The URL for the container image (e.g., quay.io/your-org/your-app).
    - name: manifest-path
      type: string
      description: The path to the deployment manifest in the deployment repo.
      default: "deployment.yaml"
    - name: GIT_USER_NAME
      type: string
      description: Git user name for commit
    - name: GIT_USER_EMAIL
      type: string
      description: Git user email for commit
  workspaces:
    - name: shared-workspace
      description: Workspace for sharing source code and other artifacts.
  tasks:
    - name: fetch-source-code
      taskRef:
        name: git-clone
        kind: ClusterTask
        apiVersion: tekton.dev/v1
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.source-repo-url)
        - name: deleteExisting
          value: "true"

    - name: build-and-push
      runAfter: ["fetch-source-code"]
      taskRef:
        name: dotnet-build-push
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: IMAGE_URL
          value: $(params.image-url)

    - name: fetch-deploy-repo
      taskRef:
        name: git-clone
        kind: ClusterTask
        apiVersion: tekton.dev/v1
      workspaces:
        - name: output
          workspace: shared-workspace
          subPath: deploy-repo
      params:
        - name: url
          value: $(params.deployment-repo-url)
        - name: deleteExisting
          value: "true"

    - name: update-deployment-manifest
      runAfter: ["build-and-push", "fetch-deploy-repo"]
      taskRef:
        name: git-update-deployment
      workspaces:
        - name: deployment-repo
          workspace: shared-workspace
          subPath: deploy-repo
      params:
        - name: DEPLOYMENT_REPO_URL
          value: $(params.deployment-repo-url)
        - name: IMAGE_DIGEST
          value: $(tasks.build-and-push.results.IMAGE_DIGEST)
        - name: MANIFEST_PATH
          value: $(params.manifest-path)
        - name: GIT_USER_NAME
          value: $(params.GIT_USER_NAME)
        - name: GIT_USER_EMAIL
          value: $(params.GIT_USER_EMAIL)
